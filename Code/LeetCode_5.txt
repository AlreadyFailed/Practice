# 最长回文子串

class Solution {
    public String longestPalindrome(String s) {
        // 声明最大长度，和开始字符的下标
        int maxLen = 0;
        int maxLenStrt = 0;
        // 开始扫描字符串
        for(int i = 0; i < s.length(); i++){
            // 定义左右指针，分别为当前字符的向左指针和向右指针
            int left = i - 1;
            int right = i + 1;
            // 定义当前长度
            int len = 1;
            // 向左扫描
            while(left >= 0 && s.charAt(left) == s.charAt(i)){
                len++;
                left--;
            }
            // 向右扫描
            while(right < s.length() && s.charAt(right) == s.charAt(i)){
                len++;
                right++;
            }
            // 左右对比
            while(left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)){
                left--;
                right++;
                len += 2;
            }
            // 替换最大长度和开始字符的下标
            if(len > maxLen){
                maxLen = len;
                maxLenStrt = left;
            }
        }
        return s.substring(maxLenStrt + 1, maxLenStrt + 1 + maxLen);
    }
}